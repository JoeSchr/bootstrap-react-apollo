{
  "name": "boilerplate-react-apollo",
  "version": "1.0.0",
  "description": "A PostGraphile boilerplate using React and Apollo on the client side.",
  "main": "index.js",
  "scripts": {
    "setup": "yarn reset && yarn setup:node:install && bash scripts/setup",
    "start": "docker-compose down && docker-compose up -d db adminer redis && docker-compose up nuxtjs",
    "test": "docker-compose run nuxtjs bash -c \"yarn test\"",
    "reset": "yarn reset:docker:down && bash -c \"yarn reset:volumes || true\" && yarn reset:docker:rebuild && yarn reset:env",
    "reset:env": "bash -c 'rm .env; touch .env'",
    "reset:docker:rebuild": "echo PORT=666 > .env && docker-compose build",
    "reset:docker:down": "echo PORT=666 > .env && docker-compose down",
    "reset:volumes": "bash -c \"docker volume rm bootstrap-react-apollo_db-volume bootstrap-react-apollo_redisdata bootstrap-react-apollo_node_modules_db-migrate bootstrap-react-apollo_node_modules_nuxtjs\"",
    "setup:node:install": "yarn setup:node:install:dbmigrate && yarn setup:node:install:nuxtjs",
    "setup:node:install:nuxtjs": "docker-compose -f docker-compose.builder.yml run --rm install-nuxtjs",
    "setup:node:install:dbmigrate": "docker-compose -f docker-compose.builder.yml run --rm install-db-migrate",
    "setup:db:create": "node db/scripts/create-migration.js",
    "setup:db:dev:schema": "yarn db:migrate:up && yarn setup:db:dev:schema:dump",
    "setup:db:dev:schema:dump": "docker-compose run db bash -c \"./scripts/dump-schema\"",
    "db:mrm:dev": "bash ./scripts/source-env && yarn db:migrate:up && yarn db:migrate:down && yarn db:migrate:up && npm run setup:db:dev:schema:dump",
    "db:rollback:dev": "bash ./scripts/source-env && yarn db:migrate:down && yarn setup:db:dev:schema:dump",
    "db:reset:dev": "bash ./scripts/source-env && yarn db:migrate:reset && yarn db:migrate:up && yarn setup:db:dev:schema:dump",
    "db:migrate:up": "docker-compose run db-migrate bash -c \"yarn migrate:up\"",
    "db:migrate:down": "docker-compose run db-migrate bash -c \"yarn migrate:down\"",
    "db:migrate:reset": "docker-compose run db-migrate bash -c \"yarn migrate:reset\"",
    "windows:enable:watcher": "start cmd /k docker-volume-watcher nuxtjs-vue-website",
    "graphiql": "docker-compose up -d graphiql && docker-compose logs graphiql"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/graphile/boilerplate-react-apollo.git"
  },
  "keywords": [
    "postgraphile",
    "graphile",
    "boilerplate",
    "vue",
    "apollo",
    "ssr",
    "graphql",
    "postgresql",
    "pg",
    "postgres"
  ],
  "author": "Benjie Gillam <code@benjiegillam.com>",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/graphile/boilerplate-react-apollo/issues"
  },
  "homepage": "https://github.com/graphile/boilerplate-react-apollo#readme",
  "dependencies": {},
  "devDependencies": {
    "babel-eslint": "^10.0.1",
    "eslint-config-airbnb": "^17.1.0",
    "eslint-config-prettier": "^4.1.0",
    "eslint-loader": "^2.1.2",
    "eslint-plugin-flowtype": "^3.6.1",
    "eslint-plugin-graphql": "^3.0.3",
    "eslint-plugin-import": "^2.17.2",
    "eslint-plugin-jest": "^22.5.0",
    "eslint-plugin-jsx-a11y": "^6.2.1",
    "eslint-plugin-prettier": "^3.0.1",
    "eslint-plugin-react": "^7.12.4",
    "eslint-plugin-vue": "^5.2.2",
    "eslint_d": "^7.3.0",
    "graphql": "^14.3.0",
    "prettier": "^1.17.0"
  }
}